#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ Odoo SportsPit
–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –Ω–∞ 10.08.2025 15:24 –ú–°–ö
"""

import xmlrpc.client
import ssl
import sys

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
URL = 'https://odoosportspitproject-production.up.railway.app'
DB = 'odoo_sportpit'
USERNAME = 'admin'
PASSWORD = 'admin'

# –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º SSL –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –¥–ª—è Railway
ssl._create_default_https_context = ssl._create_unverified_context

def connect_odoo():
    """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Odoo —á–µ—Ä–µ–∑ XML-RPC"""
    common = xmlrpc.client.ServerProxy(f'{URL}/xmlrpc/2/common')
    uid = common.authenticate(DB, USERNAME, PASSWORD, {})
    
    if not uid:
        print("‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏!")
        sys.exit(1)
    
    models = xmlrpc.client.ServerProxy(f'{URL}/xmlrpc/2/object')
    print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ Odoo (UID: {uid})")
    return models, uid

def setup_company(models, uid):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–ø–∞–Ω–∏–∏"""
    print("\nüì¶ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–ø–∞–Ω–∏–∏ SportsPit...")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏
    company_id = 1  # –û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è
    models.execute_kw(DB, uid, PASSWORD, 'res.company', 'write', 
        [[company_id], {
            'name': 'SportsPit',
            'street': '—É–ª. –°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è, 1',
            'city': '–ú–æ—Å–∫–≤–∞',
            'zip': '123456',
            'country_id': 188,  # Russia
            'phone': '+7 (495) 123-45-67',
            'email': 'info@usafitandjoy.com',
            'website': 'https://usafitandjoy.com',
            'vat': '7712345678',
        }])
    
    print("‚úÖ –ö–æ–º–ø–∞–Ω–∏—è SportsPit –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")

def setup_smtp(models, uid):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ SMTP –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—á—Ç—ã"""
    print("\nüìß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ—á—Ç–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–µ—Ä–≤–µ—Ä—ã
    existing = models.execute_kw(DB, uid, PASSWORD, 
        'ir.mail_server', 'search', [[('name', '=', 'Beget SMTP')]])
    
    smtp_data = {
        'name': 'Beget SMTP',
        'smtp_host': 'smtp.beget.com',
        'smtp_port': 465,
        'smtp_encryption': 'ssl',
        'smtp_user': 'danila@usafitandjoy.com',
        'smtp_pass': 'Vfdfcfthjpbr777',  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å
        'sequence': 10,
        'active': True,
    }
    
    if existing:
        models.execute_kw(DB, uid, PASSWORD, 
            'ir.mail_server', 'write', [existing, smtp_data])
        print("‚úÖ SMTP —Å–µ—Ä–≤–µ—Ä –æ–±–Ω–æ–≤–ª—ë–Ω")
    else:
        models.execute_kw(DB, uid, PASSWORD, 
            'ir.mail_server', 'create', [smtp_data])
        print("‚úÖ SMTP —Å–µ—Ä–≤–µ—Ä —Å–æ–∑–¥–∞–Ω")

def create_users(models, uid):
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–∏—Å—Ç–µ–º—ã"""
    print("\nüë• –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    
    users = [
        {
            'name': '–î–∞–Ω–∏–ª–∞ –ü—Ä—è–¥–∫–æ',
            'login': 'danila@usafitandjoy.com',
            'email': 'danila@usafitandjoy.com',
            'groups_id': [(6, 0, [
                3,  # Settings
                4,  # Employee
                44, # Sales Manager
                48, # Inventory Manager
            ])],
        },
        {
            'name': '–°–≤–µ—Ç–ª–∞–Ω–∞',
            'login': 'svetlana@usafitandjoy.com',
            'email': 'svetlana@usafitandjoy.com',
            'groups_id': [(6, 0, [
                4,  # Employee
                42, # Sales User
                46, # Inventory User
            ])],
        },
    ]
    
    for user_data in users:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        existing = models.execute_kw(DB, uid, PASSWORD, 
            'res.users', 'search', [[('login', '=', user_data['login'])]])
        
        if not existing:
            try:
                user_id = models.execute_kw(DB, uid, PASSWORD, 
                    'res.users', 'create', [user_data])
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_data['name']}")
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
                models.execute_kw(DB, uid, PASSWORD, 
                    'res.users', 'action_reset_password', [[user_id]])
                print(f"üìß –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ: {user_data['email']}")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ {user_data['name']}: {e}")
        else:
            print(f"‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_data['name']} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

def install_modules(models, uid):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–æ–¥—É–ª–µ–π"""
    print("\nüì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–¥—É–ª–µ–π...")
    
    modules_to_install = [
        'sale_management',     # –ü—Ä–æ–¥–∞–∂–∏
        'purchase',            # –ó–∞–∫—É–ø–∫–∏
        'stock',              # –°–∫–ª–∞–¥
        'mrp',                # –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ
        'account',            # –ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è
        'hr',                 # –ü–µ—Ä—Å–æ–Ω–∞–ª
        'project',            # –ü—Ä–æ–µ–∫—Ç—ã
        'crm',                # CRM
        'website',            # –í–µ–±-—Å–∞–π—Ç
        'mass_mailing',       # Email –º–∞—Ä–∫–µ—Ç–∏–Ω–≥
    ]
    
    for module_name in modules_to_install:
        # –ò—â–µ–º –º–æ–¥—É–ª—å
        module_ids = models.execute_kw(DB, uid, PASSWORD, 
            'ir.module.module', 'search', [[('name', '=', module_name)]])
        
        if module_ids:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
            module = models.execute_kw(DB, uid, PASSWORD, 
                'ir.module.module', 'read', [module_ids, ['state']])
            
            if module[0]['state'] != 'installed':
                try:
                    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–¥—É–ª—å
                    models.execute_kw(DB, uid, PASSWORD, 
                        'ir.module.module', 'button_immediate_install', [module_ids])
                    print(f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –º–æ–¥—É–ª—å: {module_name}")
                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ {module_name}: {e}")
            else:
                print(f"‚ÑπÔ∏è –ú–æ–¥—É–ª—å {module_name} —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        else:
            print(f"‚ùå –ú–æ–¥—É–ª—å {module_name} –Ω–µ –Ω–∞–π–¥–µ–Ω")

def setup_products(models, uid):
    """–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤"""
    print("\nüè∑Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤...")
    
    # –°–æ–∑–¥–∞—ë–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    category_id = models.execute_kw(DB, uid, PASSWORD, 
        'product.category', 'create', [{
            'name': '–°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ',
        }])
    
    products = [
        {
            'name': '–ü—Ä–æ—Ç–µ–∏–Ω Whey Gold Standard',
            'type': 'product',
            'categ_id': category_id,
            'list_price': 3500.00,
            'standard_price': 2800.00,
            'weight': 2.27,
            'description': '–°—ã–≤–æ—Ä–æ—Ç–æ—á–Ω—ã–π –ø—Ä–æ—Ç–µ–∏–Ω –ø—Ä–µ–º–∏—É–º –∫–ª–∞—Å—Å–∞',
        },
        {
            'name': 'BCAA 2:1:1',
            'type': 'product',
            'categ_id': category_id,
            'list_price': 2200.00,
            'standard_price': 1800.00,
            'weight': 0.5,
            'description': '–ê–º–∏–Ω–æ–∫–∏—Å–ª–æ—Ç—ã —Å —Ä–∞–∑–≤–µ—Ç–≤–ª–µ–Ω–Ω–æ–π —Ü–µ–ø—å—é',
        },
        {
            'name': '–ö—Ä–µ–∞—Ç–∏–Ω –º–æ–Ω–æ–≥–∏–¥—Ä–∞—Ç',
            'type': 'product',
            'categ_id': category_id,
            'list_price': 1500.00,
            'standard_price': 1200.00,
            'weight': 0.3,
            'description': '–ß–∏—Å—Ç—ã–π –∫—Ä–µ–∞—Ç–∏–Ω –º–æ–Ω–æ–≥–∏–¥—Ä–∞—Ç',
        },
    ]
    
    for product_data in products:
        try:
            product_id = models.execute_kw(DB, uid, PASSWORD, 
                'product.product', 'create', [product_data])
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø—Ä–æ–¥—É–∫—Ç: {product_data['name']}")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞ {product_data['name']}: {e}")

def setup_warehouse(models, uid):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∫–ª–∞–¥–∞"""
    print("\nüè≠ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∫–ª–∞–¥–∞...")
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∫–ª–∞–¥
    warehouse_ids = models.execute_kw(DB, uid, PASSWORD, 
        'stock.warehouse', 'search', [[('company_id', '=', 1)]], {'limit': 1})
    
    if warehouse_ids:
        models.execute_kw(DB, uid, PASSWORD, 
            'stock.warehouse', 'write', [warehouse_ids, {
                'name': '–û—Å–Ω–æ–≤–Ω–æ–π —Å–∫–ª–∞–¥ SportsPit',
                'code': 'SP01',
            }])
        print("‚úÖ –°–∫–ª–∞–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=" * 50)
    print("üöÄ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Odoo SportsPit")
    print("üìÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ 10.08.2025 15:24 –ú–°–ö")
    print("=" * 50)
    
    try:
        models, uid = connect_odoo()
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        setup_company(models, uid)
        setup_smtp(models, uid)
        create_users(models, uid)
        install_modules(models, uid)
        setup_products(models, uid)
        setup_warehouse(models, uid)
        
        print("\n" + "=" * 50)
        print("‚úÖ –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
        print("=" * 50)
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
