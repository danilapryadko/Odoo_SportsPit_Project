#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Brevo SMTP –≤ Odoo —Å –≤–∞—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""

import xmlrpc.client
import ssl
import sys

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Odoo
url = 'https://odoosportspitproject-production.up.railway.app'
db = 'odoo_sportpit'
username = 'danila@usafitandjoy.com'
password = 'admin_sportpit_2024'

# –í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Brevo SMTP
brevo_config = {
    'name': 'Brevo SMTP Server',
    'smtp_host': 'smtp-relay.brevo.com',
    'smtp_port': 587,
    'smtp_user': '9462a2001@smtp-brevo.com',
    'smtp_pass': 'G0MAdWJHScU8DQBv',
    'smtp_encryption': 'starttls',
    'sequence': 10,
    'active': True
}

def setup_brevo():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Brevo SMTP –≤ Odoo"""
    try:
        print("=" * 60)
        print("–ù–ê–°–¢–†–û–ô–ö–ê BREVO SMTP –í ODOO")
        print("=" * 60)
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç SSL
        context = ssl._create_unverified_context()
        
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Odoo
        print("\nüîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Odoo...")
        common = xmlrpc.client.ServerProxy(f'{url}/xmlrpc/2/common', context=context)
        uid = common.authenticate(db, username, password, {})
        
        if not uid:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Odoo. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞.")
            return False
        
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Odoo —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        
        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–æ–¥–µ–ª—è–º–∏
        models = xmlrpc.client.ServerProxy(f'{url}/xmlrpc/2/object', context=context)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ SMTP —Å–µ—Ä–≤–µ—Ä—ã
        print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö SMTP —Å–µ—Ä–≤–µ—Ä–æ–≤...")
        existing_servers = models.execute_kw(db, uid, password,
            'ir.mail_server', 'search_read',
            [[]], {'fields': ['id', 'name', 'smtp_host', 'active']})
        
        if existing_servers:
            print(f"üìß –ù–∞–π–¥–µ–Ω–æ {len(existing_servers)} —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤:")
            for server in existing_servers:
                status = "‚úÖ" if server['active'] else "‚ùå"
                print(f"   {status} {server['name']} ({server['smtp_host']})")
            
            # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–µ—Ä–≤–µ—Ä—ã
            for server in existing_servers:
                if server['active']:
                    models.execute_kw(db, uid, password,
                        'ir.mail_server', 'write',
                        [[server['id']], {'active': False}])
            print("   ‚ö†Ô∏è –í—Å–µ —Å—Ç–∞—Ä—ã–µ —Å–µ—Ä–≤–µ—Ä—ã –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π SMTP —Å–µ—Ä–≤–µ—Ä Brevo
        print("\nüìÆ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ Brevo SMTP —Å–µ—Ä–≤–µ—Ä–∞...")
        server_id = models.execute_kw(db, uid, password,
            'ir.mail_server', 'create',
            [brevo_config])
        
        if server_id:
            print("‚úÖ Brevo SMTP —Å–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
            print(f"   ‚Ä¢ ID —Å–µ—Ä–≤–µ—Ä–∞: {server_id}")
            print(f"   ‚Ä¢ –•–æ—Å—Ç: {brevo_config['smtp_host']}")
            print(f"   ‚Ä¢ –ü–æ—Ä—Ç: {brevo_config['smtp_port']}")
            print(f"   ‚Ä¢ –õ–æ–≥–∏–Ω: {brevo_config['smtp_user']}")
            
            # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è email
            print("\n‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ email...")
            params = {
                'mail.default.from': 'noreply@usafitandjoy.com',
                'mail.catchall.domain': 'usafitandjoy.com',
                'mail.bounce.alias': 'bounce',
                'mail.catchall.alias': 'catchall'
            }
            
            for key, value in params.items():
                # –ò—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä
                param_ids = models.execute_kw(db, uid, password,
                    'ir.config_parameter', 'search',
                    [[['key', '=', key]]])
                
                if param_ids:
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä
                    models.execute_kw(db, uid, password,
                        'ir.config_parameter', 'write',
                        [param_ids, {'value': value}])
                else:
                    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä
                    models.execute_kw(db, uid, password,
                        'ir.config_parameter', 'create',
                        [{'key': key, 'value': value}])
                
                print(f"   ‚úÖ {key} = {value}")
            
            print("\n" + "=" * 60)
            print("üéâ –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
            print("=" * 60)
            print("\n‚úÖ –ß—Ç–æ —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç:")
            print("   ‚Ä¢ –°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è —á–µ—Ä–µ–∑ email")
            print("   ‚Ä¢ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—á–µ—Ç–æ–≤ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
            print("   ‚Ä¢ Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã")
            print("   ‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            print("\nüìä –õ–∏–º–∏—Ç—ã Brevo:")
            print("   ‚Ä¢ 300 –ø–∏—Å–µ–º –≤ –¥–µ–Ω—å (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)")
            print("   ‚Ä¢ –í—ã—Å–æ–∫–∞—è –¥–æ—Å—Ç–∞–≤–ª—è–µ–º–æ—Å—Ç—å")
            print("   ‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ Brevo")
            print("\nüîç –ö–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å:")
            print("   1. –í—ã–π–¥–∏—Ç–µ –∏–∑ Odoo")
            print("   2. –ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤—Ö–æ–¥–∞ –Ω–∞–∂–º–∏—Ç–µ '–°–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å'")
            print("   3. –í–≤–µ–¥–∏—Ç–µ email: danila@usafitandjoy.com")
            print("   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É (–≤–∫–ª—é—á–∞—è –ø–∞–ø–∫—É –°–ø–∞–º)")
            
            return True
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å SMTP —Å–µ—Ä–≤–µ—Ä")
            return False
            
    except Exception as e:
        print(f"\n‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
        print("\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   ‚Ä¢ Odoo —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        print("   ‚Ä¢ –ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        print("   ‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é")
        return False

if __name__ == "__main__":
    print("\nüöÄ –ó–∞–ø—É—Å–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Brevo SMTP –¥–ª—è Odoo SportsPit...")
    print("   –°–µ—Ä–≤–µ—Ä: https://odoosportspitproject-production.up.railway.app")
    print("   –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: odoo_sportpit")
    
    result = setup_brevo()
    
    if result:
        print("\n‚úÖ –°–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        sys.exit(0)
    else:
        print("\n‚ùå –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–æ–π")
        print("üìû –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–º–æ—â—å—é –µ—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è")
        sys.exit(1)
