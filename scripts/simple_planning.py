#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –∏—Å–ø–æ–ª—å–∑—É—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
"""

import xmlrpc.client
import ssl
from datetime import datetime, timedelta

ODOO_URL = "https://odoosportspitproject-production.up.railway.app"
DB_NAME = "odoo_sportpit"
LOGIN = "danila@usafitandjoy.com"
PASSWORD = "admin123"

def create_production_schedule():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –Ω–∞ –Ω–µ–¥–µ–ª—é"""
    
    ssl_context = ssl.create_default_context()
    ssl_context.check_hostname = False
    ssl_context.verify_mode = ssl.CERT_NONE
    
    try:
        common = xmlrpc.client.ServerProxy(f'{ODOO_URL}/xmlrpc/2/common', context=ssl_context)
        uid = common.authenticate(DB_NAME, LOGIN, PASSWORD, {})
        
        if not uid:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏")
            return False
            
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ")
        models = xmlrpc.client.ServerProxy(f'{ODOO_URL}/xmlrpc/2/object', context=ssl_context)
        
        print("\nüìÖ –°–û–ó–î–ê–ù–ò–ï –ü–õ–ê–ù–ê –ü–†–û–ò–ó–í–û–î–°–¢–í–ê –ù–ê –ù–ï–î–ï–õ–Æ:")
        print("="*50)
        
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞
        products = models.execute_kw(
            DB_NAME, uid, PASSWORD,
            'product.product', 'search_read',
            [[('name', 'in', ['Whey Protein –í–∞–Ω–∏–ª—å 2–∫–≥', 'Mass Gainer 3–∫–≥', 'BCAA 300–≥', 'Creatine 500–≥'])]],
            {'fields': ['id', 'name']}
        )
        
        if not products:
            print("‚ùå –ü—Ä–æ–¥—É–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return False
        
        # –ü–ª–∞–Ω –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –Ω–∞ –Ω–µ–¥–µ–ª—é
        production_plan = [
            {'day': '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', 'product': 'Whey Protein –í–∞–Ω–∏–ª—å 2–∫–≥', 'qty': 50},
            {'day': '–í—Ç–æ—Ä–Ω–∏–∫', 'product': 'Mass Gainer 3–∫–≥', 'qty': 30},
            {'day': '–°—Ä–µ–¥–∞', 'product': 'BCAA 300–≥', 'qty': 100},
            {'day': '–ß–µ—Ç–≤–µ—Ä–≥', 'product': 'Creatine 500–≥', 'qty': 80},
            {'day': '–ü—è—Ç–Ω–∏—Ü–∞', 'product': 'Whey Protein –í–∞–Ω–∏–ª—å 2–∫–≥', 'qty': 50},
        ]
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã
        start_date = datetime.now()
        
        for i, plan in enumerate(production_plan):
            # –ù–∞—Ö–æ–¥–∏–º –ø—Ä–æ–¥—É–∫—Ç
            product = next((p for p in products if plan['product'] in p['name']), None)
            
            if product:
                # –î–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞
                production_date = start_date + timedelta(days=i)
                
                # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑
                try:
                    mo_id = models.execute_kw(
                        DB_NAME, uid, PASSWORD,
                        'mrp.production', 'create',
                        [{
                            'product_id': product['id'],
                            'product_qty': plan['qty'],
                            'date_start': production_date.strftime('%Y-%m-%d 08:00:00'),
                            'date_finished': production_date.strftime('%Y-%m-%d 18:00:00'),
                            'name': f"MO/{plan['day'][:3]}/{product['name'][:10]}",
                        }]
                    )
                    
                    print(f"‚úÖ {plan['day']:12} | {plan['product']:25} | {plan['qty']:3} —à—Ç")
                    
                except Exception as e:
                    print(f"‚ö†Ô∏è {plan['day']:12} | –û—à–∏–±–∫–∞: {str(e)[:40]}")
        
        print("\n" + "="*50)
        print("üìä –ü–õ–ê–ù –°–û–ó–î–ê–ù!")
        print("\n–¢–µ–ø–µ—Ä—å –≤ Odoo:")
        print("1. –û—Ç–∫—Ä–æ–π—Ç–µ –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ ‚Üí –ó–∞–∫–∞–∑—ã –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ")
        print("2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–∏–¥ '–ö–∞–ª–µ–Ω–¥–∞—Ä—å' –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è")
        print("3. –ò–ª–∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –≤ Excel –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def create_simple_kanban():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–π Kanban –¥–æ—Å–∫–∏ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("\nüìã –°–û–í–ï–¢: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Kanban –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ:")
    print("1. –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ ‚Üí –ó–∞–∫–∞–∑—ã –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ")
    print("2. –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ—Å—å –Ω–∞ –≤–∏–¥ Kanban (–∏–∫–æ–Ω–∫–∞ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É)")
    print("3. –ì—Ä—É–ø–ø–∏—Ä—É–π—Ç–µ –ø–æ:")
    print("   - –°—Ç–∞—Ç—É—Å—É (–ß–µ—Ä–Ω–æ–≤–∏–∫ ‚Üí –í –ø—Ä–æ—Ü–µ—Å—Å–µ ‚Üí –ì–æ—Ç–æ–≤–æ)")
    print("   - –ü—Ä–æ–¥—É–∫—Ç—É")
    print("   - –î–∞—Ç–µ")
    print("\n‚úÖ –≠—Ç–æ –¥–∞—Å—Ç –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ Enterprise!")

if __name__ == "__main__":
    print("="*60)
    print("üóìÔ∏è –ü–õ–ê–ù–ò–†–û–í–ê–ù–ò–ï –ü–†–û–ò–ó–í–û–î–°–¢–í–ê (Community Edition)")
    print("="*60)
    
    create_production_schedule()
    create_simple_kanban()
