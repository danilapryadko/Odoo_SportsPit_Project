#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏—è –ë–î Odoo —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
–ê–≤—Ç–æ—Ä: Claude AI Assistant
–î–∞—Ç–∞: 09.08.2025
"""

from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import Select
import time
import sys

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
ODOO_URL = "https://odoosportspitproject-production.up.railway.app"
MASTER_PASSWORD = "SportPit2024Master"
DB_NAME = "odoo_sportpit"
ADMIN_EMAIL = "danila@usafitandjoy.com"
ADMIN_PASSWORD = "admin_sportpit_2024"
LANG = "ru_RU"

class OdooAutomation:
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞"""
        print("üåê –ó–∞–ø—É—Å–∫ –±—Ä–∞—É–∑–µ—Ä–∞...")
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Chrome
        options = webdriver.ChromeOptions()
        options.add_argument('--no-sandbox')
        options.add_argument('--disable-dev-shm-usage')
        options.add_experimental_option('excludeSwitches', ['enable-logging'])
        
        try:
            self.driver = webdriver.Chrome(options=options)
            self.driver.maximize_window()
            self.wait = WebDriverWait(self.driver, 10)
            print("‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–ø—É—â–µ–Ω")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞: {e}")
            print("\n–£—Å—Ç–∞–Ω–æ–≤–∫–∞ ChromeDriver:")
            print("brew install --cask chromedriver")
            print("–∏–ª–∏")
            print("pip install selenium webdriver-manager")
            sys.exit(1)
    
    def check_database_exists(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö...")
        
        try:
            self.driver.get(f"{ODOO_URL}/web/database/selector")
            time.sleep(2)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–∞—à–∞ –ë–î –≤ —Å–ø–∏—Å–∫–µ
            page_source = self.driver.page_source
            if DB_NAME in page_source:
                print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '{DB_NAME}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                return True
            else:
                print(f"üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '{DB_NAME}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                return False
        except:
            return False
    
    def create_database(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"""
        print("\nüìä –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        
        try:
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ë–î
            self.driver.get(f"{ODOO_URL}/web/database/manager")
            time.sleep(3)
            
            # –ò—â–µ–º –∫–Ω–æ–ø–∫—É —Å–æ–∑–¥–∞–Ω–∏—è –ë–î
            try:
                create_btn = self.driver.find_element(By.XPATH, "//a[contains(text(), 'Create Database')]")
                create_btn.click()
            except:
                # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø—É—Ç—å
                create_btn = self.driver.find_element(By.XPATH, "//button[contains(text(), 'Create')]")
                create_btn.click()
            
            time.sleep(2)
            
            # –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É
            print("üìù –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã —Å–æ–∑–¥–∞–Ω–∏—è –ë–î...")
            
            # Master Password
            master_pwd = self.driver.find_element(By.NAME, "master_pwd")
            master_pwd.clear()
            master_pwd.send_keys(MASTER_PASSWORD)
            
            # Database Name
            db_name = self.driver.find_element(By.NAME, "name")
            db_name.clear()
            db_name.send_keys(DB_NAME)
            
            # Admin Email
            admin_email = self.driver.find_element(By.NAME, "login")
            admin_email.clear()
            admin_email.send_keys(ADMIN_EMAIL)
            
            # Admin Password
            admin_pwd = self.driver.find_element(By.NAME, "password")
            admin_pwd.clear()
            admin_pwd.send_keys(ADMIN_PASSWORD)
            
            # Confirm Password
            confirm_pwd = self.driver.find_element(By.NAME, "confirm_password")
            confirm_pwd.clear()
            confirm_pwd.send_keys(ADMIN_PASSWORD)
            
            # Language
            try:
                lang_select = Select(self.driver.find_element(By.NAME, "lang"))
                lang_select.select_by_value(LANG)
            except:
                print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å —è–∑—ã–∫, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
            
            # Country
            try:
                country_select = Select(self.driver.find_element(By.NAME, "country_code"))
                country_select.select_by_value("ru")
            except:
                print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å —Å—Ç—Ä–∞–Ω—É")
            
            # Demo data - —Å–Ω–∏–º–∞–µ–º –≥–∞–ª–æ—á–∫—É –µ—Å–ª–∏ —Å—Ç–æ–∏—Ç
            try:
                demo_checkbox = self.driver.find_element(By.NAME, "demo")
                if demo_checkbox.is_selected():
                    demo_checkbox.click()
            except:
                pass
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É
            print("‚è≥ –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 1-2 –º–∏–Ω—É—Ç—ã)...")
            submit_btn = self.driver.find_element(By.XPATH, "//button[@type='submit']")
            submit_btn.click()
            
            # –ñ–¥–µ–º —Å–æ–∑–¥–∞–Ω–∏—è –ë–î
            time.sleep(30)
            
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ë–î: {e}")
            return False
    
    def login_to_odoo(self):
        """–í—Ö–æ–¥ –≤ Odoo"""
        print("\nüîê –í—Ö–æ–¥ –≤ Odoo...")
        
        try:
            self.driver.get(f"{ODOO_URL}/web/login")
            time.sleep(2)
            
            # Email
            login_field = self.driver.find_element(By.ID, "login")
            login_field.clear()
            login_field.send_keys(ADMIN_EMAIL)
            
            # Password
            password_field = self.driver.find_element(By.ID, "password")
            password_field.clear()
            password_field.send_keys(ADMIN_PASSWORD)
            
            # Submit
            login_btn = self.driver.find_element(By.XPATH, "//button[@type='submit']")
            login_btn.click()
            
            time.sleep(5)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥
            if "inbox" in self.driver.current_url or "home" in self.driver.current_url:
                print("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É!")
                return True
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {e}")
            return False
    
    def install_apps(self):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π Odoo"""
        print("\nüì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π...")
        
        apps_to_install = [
            "Manufacturing",
            "Inventory", 
            "Purchase",
            "Sales",
            "Accounting",
            "Employees",
            "Project"
        ]
        
        try:
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –º–µ–Ω—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
            self.driver.get(f"{ODOO_URL}/web#action=base.open_module_tree&model=ir.module.module&view_type=kanban")
            time.sleep(3)
            
            for app_name in apps_to_install:
                try:
                    print(f"  üîÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ {app_name}...")
                    
                    # –ò—â–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
                    search_box = self.driver.find_element(By.CLASS_NAME, "o_searchview_input")
                    search_box.clear()
                    search_box.send_keys(app_name)
                    search_box.send_keys(Keys.RETURN)
                    time.sleep(2)
                    
                    # –ù–∞—Ö–æ–¥–∏–º –∫–Ω–æ–ø–∫—É Install
                    install_btn = self.driver.find_element(By.XPATH, f"//div[contains(@class, 'o_kanban_record')]//button[contains(text(), 'Install')]")
                    install_btn.click()
                    time.sleep(5)
                    
                    print(f"  ‚úÖ {app_name} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                    
                except:
                    print(f"  ‚ÑπÔ∏è {app_name} —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
            print("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π: {e}")
            return False
    
    def close(self):
        """–ó–∞–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞"""
        input("\n‚è∏Ô∏è –ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –∑–∞–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä...")
        self.driver.quit()
    
    def run(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å"""
        print("=" * 60)
        print("üöÄ –ê–í–¢–û–ú–ê–¢–ò–ó–ê–¶–ò–Ø –ù–ê–°–¢–†–û–ô–ö–ò ODOO")
        print("=" * 60)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ë–î
        if not self.check_database_exists():
            # –°–æ–∑–¥–∞–µ–º –ë–î
            if self.create_database():
                print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ë–î")
                self.close()
                return
        
        # –í—Ö–æ–¥–∏–º –≤ —Å–∏—Å—Ç–µ–º—É
        if self.login_to_odoo():
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            self.install_apps()
        
        print("\n" + "=" * 60)
        print("‚úÖ –ê–í–¢–û–ú–ê–¢–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")
        print("=" * 60)
        print(f"\nüåê Odoo –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: {ODOO_URL}")
        print(f"üìß Email: {ADMIN_EMAIL}")
        print(f"üîë –ü–∞—Ä–æ–ª—å: {ADMIN_PASSWORD}")
        
        self.close()

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É selenium
    try:
        import selenium
    except ImportError:
        print("‚ùå Selenium –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π:")
        print("pip install selenium")
        sys.exit(1)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é
    automation = OdooAutomation()
    automation.run()

if __name__ == "__main__":
    main()
