#!/usr/bin/env python3
"""
–£–º–Ω—ã–π –ø–æ–¥–±–æ—Ä –ø–∞—Ä–æ–ª—è —Å –∞–Ω–∞–ª–∏–∑–æ–º –æ—Ç–≤–µ—Ç–æ–≤
"""

import requests
from requests.adapters import HTTPAdapter
from urllib3.util.retry import Retry
import json
import time

ODOO_URL = "https://odoosportspitproject-production.up.railway.app"
EMAIL = "danila@usafitandjoy.com"

# –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–∞—Ä–æ–ª–µ–π
PASSWORDS = [
    # –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    "admin_sportpit_2024",
    "SportPit2024Master", 
    "dbny-777k-4ggc",
    
    # –í–∞—Ä–∏–∞—Ü–∏–∏ SportPit
    "SportPit2024",
    "sportpit2024",
    "SportPit",
    "sportpit",
    "SPORTPIT2024",
    "Sportpit2024",
    
    # –í–∞—Ä–∏–∞—Ü–∏–∏ admin
    "admin",
    "Admin",
    "ADMIN",
    "admin123",
    "Admin123",
    "admin2024",
    "Admin2024",
    "administrator",
    
    # –í–∞—Ä–∏–∞—Ü–∏–∏ odoo
    "odoo",
    "Odoo",
    "ODOO", 
    "odoo2024",
    "Odoo2024",
    "odoo_sportpit",
    "OdooSportPit",
    "odoo_sportpit_2024",
    
    # –ü—Ä–æ—Å—Ç—ã–µ –ø–∞—Ä–æ–ª–∏
    "password",
    "Password",
    "password123",
    "Password123",
    "123456",
    "12345678",
    "1234567890",
    "qwerty",
    "qwerty123",
    
    # –°–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø—Ä–æ–µ–∫—Ç–æ–º
    "danila",
    "Danila",
    "usafitandjoy",
    "railway",
    "Railway",
    
    # –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ
    "demo",
    "test",
    "root",
    "pass",
    "1234",
    "0000",
    "1111"
]

def create_session():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ —Å retry –ª–æ–≥–∏–∫–æ–π"""
    session = requests.Session()
    retry = Retry(
        total=3,
        backoff_factor=0.3,
        status_forcelist=[500, 502, 503, 504]
    )
    adapter = HTTPAdapter(max_retries=retry)
    session.mount('http://', adapter)
    session.mount('https://', adapter)
    return session

def check_via_jsonrpc(email, password):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ JSON-RPC API"""
    session = create_session()
    
    try:
        # –ü—Ä–æ–±—É–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ JSON-RPC
        url = f"{ODOO_URL}/jsonrpc"
        headers = {'Content-Type': 'application/json'}
        
        data = {
            "jsonrpc": "2.0",
            "method": "call",
            "params": {
                "service": "common",
                "method": "authenticate",
                "args": ["odoo_sportpit", email, password, {}]
            },
            "id": 1
        }
        
        response = session.post(url, json=data, headers=headers, timeout=5)
        
        if response.status_code == 200:
            result = response.json()
            if result.get('result'):
                return True
                
    except:
        pass
    
    return False

def check_via_web(email, password):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ –≤–µ–±-—Ñ–æ—Ä–º—É"""
    session = create_session()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º CSRF —Ç–æ–∫–µ–Ω
        login_page = session.get(f"{ODOO_URL}/web/login", timeout=5)
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º CSRF –µ—Å–ª–∏ –µ—Å—Ç—å
        csrf_token = None
        if 'csrf_token' in login_page.text:
            import re
            match = re.search(r'csrf_token["\s:]+["\'](.*?)["\']', login_page.text)
            if match:
                csrf_token = match.group(1)
        
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        login_data = {
            'login': email,
            'password': password,
            'db': 'odoo_sportpit'
        }
        
        if csrf_token:
            login_data['csrf_token'] = csrf_token
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º
        response = session.post(
            f"{ODOO_URL}/web/login",
            data=login_data,
            allow_redirects=False,
            timeout=5
        )
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        if response.status_code in [302, 303]:
            location = response.headers.get('location', '')
            if '/web' in location and 'login' not in location:
                return True
                
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—É–∫–∏
        if 'session_id' in session.cookies:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Å–µ—Å—Å–∏–∏
            check = session.get(f"{ODOO_URL}/web", timeout=5)
            if check.status_code == 200 and 'login' not in check.url:
                return True
                
    except:
        pass
    
    return False

def main():
    print("=" * 60)
    print("üîê –£–ú–ù–´–ô –ü–û–î–ë–û–† –ü–ê–†–û–õ–Ø –î–õ–Ø ODOO")
    print("=" * 60)
    print(f"\nüìß Email: {EMAIL}")
    print(f"üîç –ü–∞—Ä–æ–ª–µ–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {len(PASSWORDS)}")
    print("üîÑ –ò—Å–ø–æ–ª—å–∑—É—é 2 –º–µ—Ç–æ–¥–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏\n")
    
    found = False
    
    for i, password in enumerate(PASSWORDS, 1):
        print(f"[{i:2d}/{len(PASSWORDS)}] {password:25s} ", end="")
        
        # –ú–µ—Ç–æ–¥ 1: JSON-RPC
        if check_via_jsonrpc(EMAIL, password):
            print("‚úÖ (JSON-RPC)")
            found = password
            break
            
        # –ú–µ—Ç–æ–¥ 2: Web —Ñ–æ—Ä–º–∞
        if check_via_web(EMAIL, password):
            print("‚úÖ (Web)")
            found = password
            break
            
        print("‚ùå")
        time.sleep(0.3)  # –ê–Ω—Ç–∏–±—Ä—É—Ç –∑–∞—â–∏—Ç–∞
    
    if found:
        print("\n" + "="*60)
        print("üéâ –ü–ê–†–û–õ–¨ –ù–ê–ô–î–ï–ù! üéâ")
        print("="*60)
        print(f"\n‚úÖ Email: {EMAIL}")
        print(f"‚úÖ –ü–∞—Ä–æ–ª—å: {found}")
        print(f"\nüåê –í–æ–π–¥–∏—Ç–µ –∑–¥–µ—Å—å: {ODOO_URL}/web/login")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å
        with open("FOUND_PASSWORD.txt", "w") as f:
            f.write(f"Email: {EMAIL}\n")
            f.write(f"Password: {found}\n")
            f.write(f"URL: {ODOO_URL}\n")
        
        print("\nüìÑ –ü–∞—Ä–æ–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ FOUND_PASSWORD.txt")
    else:
        print("\n‚ùå –ü–∞—Ä–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
        print("1. –ë–∞–∑–∞ —Å–æ–∑–¥–∞–Ω–∞ —Å –¥—Ä—É–≥–∏–º email")
        print("2. –ù—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –ë–î –∏ —Å–æ–∑–¥–∞—Ç—å –∑–∞–Ω–æ–≤–æ")
        print("3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—Å–ø–æ–º–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å, –∫–æ—Ç–æ—Ä—ã–π –≤–≤–æ–¥–∏–ª–∏")

if __name__ == "__main__":
    main()
