#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SMTP —Å–µ—Ä–≤–µ—Ä–∞ –≤ Odoo
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç Gmail SMTP –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ–π –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–∏—Å–µ–º
"""

import xmlrpc.client
import ssl
import sys

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Odoo
url = 'https://odoosportspitproject-production.up.railway.app'
db = 'odoo_sportpit'
username = 'danila@usafitandjoy.com'
password = 'admin_sportpit_2024'

# –í–ê–ñ–ù–û: –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Gmail SMTP –Ω—É–∂–Ω–æ:
# 1. –í–∫–ª—é—á–∏—Ç—å –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –≤ Google –∞–∫–∫–∞—É–Ω—Ç–µ
# 2. –°–æ–∑–¥–∞—Ç—å –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: https://myaccount.google.com/apppasswords
# 3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –ø–∞—Ä–æ–ª—å –≤–º–µ—Å—Ç–æ –æ–±—ã—á–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è Gmail

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ SMTP (–ø—Ä–∏–º–µ—Ä –¥–ª—è Gmail)
smtp_config = {
    'name': 'Gmail SMTP Server',
    'smtp_host': 'smtp.gmail.com',
    'smtp_port': 587,
    'smtp_user': 'your_email@gmail.com',  # –ó–ê–ú–ï–ù–ò–¢–ï –Ω–∞ –≤–∞—à Gmail
    'smtp_pass': 'your_app_password',     # –ó–ê–ú–ï–ù–ò–¢–ï –Ω–∞ –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Google
    'smtp_encryption': 'starttls',
    'sequence': 10,
    'active': True
}

# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤:

# Yandex
yandex_config = {
    'name': 'Yandex SMTP Server',
    'smtp_host': 'smtp.yandex.ru',
    'smtp_port': 587,
    'smtp_user': 'your_email@yandex.ru',  # –ó–ê–ú–ï–ù–ò–¢–ï
    'smtp_pass': 'your_password',         # –ó–ê–ú–ï–ù–ò–¢–ï
    'smtp_encryption': 'starttls',
    'sequence': 10,
    'active': True
}

# Mail.ru
mailru_config = {
    'name': 'Mail.ru SMTP Server', 
    'smtp_host': 'smtp.mail.ru',
    'smtp_port': 465,
    'smtp_user': 'your_email@mail.ru',    # –ó–ê–ú–ï–ù–ò–¢–ï
    'smtp_pass': 'your_password',         # –ó–ê–ú–ï–ù–ò–¢–ï
    'smtp_encryption': 'ssl',
    'sequence': 10,
    'active': True
}

# SendGrid (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è production)
sendgrid_config = {
    'name': 'SendGrid SMTP Server',
    'smtp_host': 'smtp.sendgrid.net',
    'smtp_port': 587,
    'smtp_user': 'apikey',                # –í—Å–µ–≥–¥–∞ 'apikey' –¥–ª—è SendGrid
    'smtp_pass': 'your_sendgrid_api_key', # –ó–ê–ú–ï–ù–ò–¢–ï –Ω–∞ API –∫–ª—é—á SendGrid
    'smtp_encryption': 'starttls',
    'sequence': 10,
    'active': True
}

def setup_smtp(config_to_use):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ SMTP —Å–µ—Ä–≤–µ—Ä–∞ –≤ Odoo"""
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç SSL
        context = ssl._create_unverified_context()
        
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Odoo
        common = xmlrpc.client.ServerProxy(f'{url}/xmlrpc/2/common', context=context)
        uid = common.authenticate(db, username, password, {})
        
        if not uid:
            print("‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏")
            return False
        
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è. UID: {uid}")
        
        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–æ–¥–µ–ª—è–º–∏
        models = xmlrpc.client.ServerProxy(f'{url}/xmlrpc/2/object', context=context)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ SMTP —Å–µ—Ä–≤–µ—Ä—ã
        existing_servers = models.execute_kw(db, uid, password,
            'ir.mail_server', 'search_read',
            [[]], {'fields': ['name', 'smtp_host', 'active']})
        
        if existing_servers:
            print("\nüìß –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ SMTP —Å–µ—Ä–≤–µ—Ä—ã:")
            for server in existing_servers:
                status = "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" if server['active'] else "‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω"
                print(f"  - {server['name']} ({server['smtp_host']}) {status}")
            
            # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å—Ç–∞—Ä—ã–µ —Å–µ—Ä–≤–µ—Ä—ã
            for server in existing_servers:
                models.execute_kw(db, uid, password,
                    'ir.mail_server', 'write',
                    [[server['id']], {'active': False}])
            print("  ‚ö†Ô∏è –°—Ç–∞—Ä—ã–µ —Å–µ—Ä–≤–µ—Ä—ã –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π SMTP —Å–µ—Ä–≤–µ—Ä
        server_id = models.execute_kw(db, uid, password,
            'ir.mail_server', 'create',
            [config_to_use])
        
        if server_id:
            print(f"\n‚úÖ SMTP —Å–µ—Ä–≤–µ—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
            print(f"   - –ù–∞–∑–≤–∞–Ω–∏–µ: {config_to_use['name']}")
            print(f"   - –•–æ—Å—Ç: {config_to_use['smtp_host']}")
            print(f"   - –ü–æ—Ä—Ç: {config_to_use['smtp_port']}")
            print(f"   - –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ: {config_to_use['smtp_encryption']}")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
            print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...")
            try:
                test_result = models.execute_kw(db, uid, password,
                    'ir.mail_server', 'test_smtp_connection',
                    [server_id])
                print("‚úÖ –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —É—Å–ø–µ—à–µ–Ω!")
            except Exception as e:
                print(f"‚ö†Ô∏è –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω–µ —É–¥–∞–ª—Å—è: {e}")
                print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–≥–æ email –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞")
            
            return True
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å SMTP —Å–µ—Ä–≤–µ—Ä")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def setup_email_templates():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ email —à–∞–±–ª–æ–Ω–æ–≤ –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è"""
    try:
        context = ssl._create_unverified_context()
        common = xmlrpc.client.ServerProxy(f'{url}/xmlrpc/2/common', context=context)
        uid = common.authenticate(db, username, password, {})
        
        if not uid:
            return False
        
        models = xmlrpc.client.ServerProxy(f'{url}/xmlrpc/2/object', context=context)
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∏—Å—Ç–µ–º—ã –¥–ª—è email
        params_to_set = {
            'mail.catchall.domain': 'usafitandjoy.com',  # –í–∞—à –¥–æ–º–µ–Ω
            'mail.default.from': 'noreply@usafitandjoy.com',  # Email –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
            'mail.bounce.alias': 'bounce',
            'mail.catchall.alias': 'catchall'
        }
        
        for key, value in params_to_set.items():
            # –ò—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä
            param_ids = models.execute_kw(db, uid, password,
                'ir.config_parameter', 'search',
                [[['key', '=', key]]])
            
            if param_ids:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π
                models.execute_kw(db, uid, password,
                    'ir.config_parameter', 'write',
                    [param_ids, {'value': value}])
            else:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
                models.execute_kw(db, uid, password,
                    'ir.config_parameter', 'create',
                    [{'key': key, 'value': value}])
            
            print(f"‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä {key} = {value}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —à–∞–±–ª–æ–Ω–æ–≤: {e}")
        return False

if __name__ == "__main__":
    print("=" * 60)
    print("–ù–ê–°–¢–†–û–ô–ö–ê EMAIL –í ODOO")
    print("=" * 60)
    
    print("\n‚ö†Ô∏è –í–ê–ñ–ù–û: –ü–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Å–∫—Ä–∏–ø—Ç–∞:")
    print("1. –ó–∞–º–µ–Ω–∏—Ç–µ email –∏ –ø–∞—Ä–æ–ª—å –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤—ã—à–µ")
    print("2. –î–ª—è Gmail: —Å–æ–∑–¥–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    print("3. –î–ª—è Yandex/Mail.ru: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±—ã—á–Ω—ã–π –ø–∞—Ä–æ–ª—å")
    print("4. –î–ª—è SendGrid: –ø–æ–ª—É—á–∏—Ç–µ API –∫–ª—é—á\n")
    
    print("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ email:")
    print("1. Gmail (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)")
    print("2. Yandex")
    print("3. Mail.ru")
    print("4. SendGrid (–¥–ª—è production)")
    print("5. –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É")
    
    choice = input("\n–í–∞—à –≤—ã–±–æ—Ä (1-5): ")
    
    config = None
    if choice == '1':
        config = smtp_config
    elif choice == '2':
        config = yandex_config
    elif choice == '3':
        config = mailru_config
    elif choice == '4':
        config = sendgrid_config
    elif choice == '5':
        print("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞")
        sys.exit(0)
    else:
        print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
        sys.exit(1)
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print(f"\n–ù–∞—Å—Ç—Ä–æ–π–∫–∞ {config['name']}")
    config['smtp_user'] = input(f"–í–≤–µ–¥–∏—Ç–µ email ({config['smtp_user']}): ") or config['smtp_user']
    config['smtp_pass'] = input(f"–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å/API –∫–ª—é—á: ") or config['smtp_pass']
    
    if setup_smtp(config):
        print("\nüìß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ email —à–∞–±–ª–æ–Ω–æ–≤...")
        setup_email_templates()
        print("\n‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:")
        print("1. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è")
        print("2. –û—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å—á–µ—Ç–∞ –∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ email")
        print("3. –ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã")
    else:
        print("\n‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")
