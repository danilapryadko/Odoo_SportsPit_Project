#!/usr/bin/env python3
"""
–ü–µ—Ä–µ–Ω–æ—Å —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –ú–æ–π–°–∫–ª–∞–¥ –≤ Odoo
"""

import requests
import xmlrpc.client
import ssl
import json
from datetime import datetime

# === –ù–ê–°–¢–†–û–ô–ö–ò –ú–û–ô–°–ö–õ–ê–î ===
# –í–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —É–∫–∞–∑–∞—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ
MOYSKLAD_LOGIN = "admin@company"  # –í–∞—à –ª–æ–≥–∏–Ω –≤ –ú–æ–π–°–∫–ª–∞–¥
MOYSKLAD_PASSWORD = "password"     # –í–∞—à –ø–∞—Ä–æ–ª—å –≤ –ú–æ–π–°–∫–ª–∞–¥
MOYSKLAD_BASE_URL = "https://api.moysklad.ru/api/remap/1.2"

# === –ù–ê–°–¢–†–û–ô–ö–ò ODOO ===
ODOO_URL = "https://odoosportspitproject-production.up.railway.app"
DB_NAME = "odoo_sportpit"
ODOO_LOGIN = "danila@usafitandjoy.com"
ODOO_PASSWORD = "admin123"

class MoySkladToOdoo:
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π"""
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Odoo
        ssl_context = ssl.create_default_context()
        ssl_context.check_hostname = False
        ssl_context.verify_mode = ssl.CERT_NONE
        
        self.odoo_common = xmlrpc.client.ServerProxy(f'{ODOO_URL}/xmlrpc/2/common', context=ssl_context)
        self.odoo_uid = self.odoo_common.authenticate(DB_NAME, ODOO_LOGIN, ODOO_PASSWORD, {})
        
        if self.odoo_uid:
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ Odoo")
            self.odoo_models = xmlrpc.client.ServerProxy(f'{ODOO_URL}/xmlrpc/2/object', context=ssl_context)
        else:
            raise Exception("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Odoo")
        
        # –°–µ—Å—Å–∏—è –¥–ª—è –ú–æ–π–°–∫–ª–∞–¥
        self.moysklad_session = requests.Session()
        self.moysklad_session.auth = (MOYSKLAD_LOGIN, MOYSKLAD_PASSWORD)
        
    def test_moysklad_connection(self):
        """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ú–æ–π–°–∫–ª–∞–¥"""
        try:
            response = self.moysklad_session.get(f"{MOYSKLAD_BASE_URL}/entity/product")
            if response.status_code == 200:
                print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –ú–æ–π–°–∫–ª–∞–¥")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ú–æ–π–°–∫–ª–∞–¥: {response.status_code}")
                print(f"–û—Ç–≤–µ—Ç: {response.text}")
                return False
        except Exception as e:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ú–æ–π–°–∫–ª–∞–¥: {e}")
            return False
    
    def get_moysklad_products(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –ú–æ–π–°–∫–ª–∞–¥"""
        print("\nüì¶ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –ú–æ–π–°–∫–ª–∞–¥...")
        
        products = []
        offset = 0
        limit = 100
        
        while True:
            response = self.moysklad_session.get(
                f"{MOYSKLAD_BASE_URL}/entity/product",
                params={'limit': limit, 'offset': offset}
            )
            
            if response.status_code != 200:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤: {response.status_code}")
                break
            
            data = response.json()
            rows = data.get('rows', [])
            
            if not rows:
                break
                
            products.extend(rows)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –µ—â–µ —Ç–æ–≤–∞—Ä—ã
            if len(rows) < limit:
                break
                
            offset += limit
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ú–æ–π–°–∫–ª–∞–¥: {len(products)}")
        return products
    
    def get_moysklad_variants(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –ú–æ–π–°–∫–ª–∞–¥"""
        print("\nüì¶ –ü–æ–ª—É—á–µ–Ω–∏–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π –∏–∑ –ú–æ–π–°–∫–ª–∞–¥...")
        
        variants = []
        offset = 0
        limit = 100
        
        while True:
            response = self.moysklad_session.get(
                f"{MOYSKLAD_BASE_URL}/entity/variant",
                params={'limit': limit, 'offset': offset}
            )
            
            if response.status_code != 200:
                break
            
            data = response.json()
            rows = data.get('rows', [])
            
            if not rows:
                break
                
            variants.extend(rows)
            
            if len(rows) < limit:
                break
                
            offset += limit
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π: {len(variants)}")
        return variants
    
    def get_moysklad_stock(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤ –∏–∑ –ú–æ–π–°–∫–ª–∞–¥"""
        print("\nüìä –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤...")
        
        response = self.moysklad_session.get(
            f"{MOYSKLAD_BASE_URL}/report/stock/all"
        )
        
        if response.status_code == 200:
            data = response.json()
            stocks = data.get('rows', [])
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –æ—Å—Ç–∞—Ç–∫–æ–≤: {len(stocks)}")
            return stocks
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤: {response.status_code}")
            return []
    
    def create_odoo_category(self, name):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ Odoo"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ
        existing = self.odoo_models.execute_kw(
            DB_NAME, self.odoo_uid, ODOO_PASSWORD,
            'product.category', 'search',
            [[('name', '=', name)]]
        )
        
        if existing:
            return existing[0]
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é
        cat_id = self.odoo_models.execute_kw(
            DB_NAME, self.odoo_uid, ODOO_PASSWORD,
            'product.category', 'create',
            [{'name': name}]
        )
        return cat_id
    
    def create_odoo_product(self, moysklad_product):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ Odoo –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –ú–æ–π–°–∫–ª–∞–¥"""
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
        category_name = "–ò–º–ø–æ—Ä—Ç –∏–∑ –ú–æ–π–°–∫–ª–∞–¥"
        if moysklad_product.get('productFolder'):
            # –ü–æ–ª—É—á–∞–µ–º –ø–∞–ø–∫—É —Ç–æ–≤–∞—Ä–∞
            folder_url = moysklad_product['productFolder']['meta']['href']
            folder_response = self.moysklad_session.get(folder_url)
            if folder_response.status_code == 200:
                folder_data = folder_response.json()
                category_name = folder_data.get('name', category_name)
        
        category_id = self.create_odoo_category(category_name)
        
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞
        product_data = {
            'name': moysklad_product.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'),
            'default_code': moysklad_product.get('code', moysklad_product.get('article', '')),
            'barcode': moysklad_product.get('barcodes', [{}])[0].get('ean13') if moysklad_product.get('barcodes') else None,
            'type': 'product',
            'categ_id': category_id,
            'sale_ok': True,
            'purchase_ok': True,
            'list_price': 0,  # –¶–µ–Ω—É –ø–æ–ª—É—á–∏–º –æ—Ç–¥–µ–ª—å–Ω–æ
            'standard_price': 0,  # –°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–ª—É—á–∏–º –æ—Ç–¥–µ–ª—å–Ω–æ
            'description': moysklad_product.get('description', ''),
            'uom_id': 1,  # –ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è (—à—Ç—É–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
        }
        
        # –ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—ã
        if moysklad_product.get('salePrices'):
            for price in moysklad_product['salePrices']:
                if price.get('priceType', {}).get('name') == '–¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏':
                    product_data['list_price'] = price.get('value', 0) / 100  # –ú–æ–π–°–∫–ª–∞–¥ —Ö—Ä–∞–Ω–∏—Ç –≤ –∫–æ–ø–µ–π–∫–∞—Ö
                    break
        
        if moysklad_product.get('buyPrice'):
            product_data['standard_price'] = moysklad_product['buyPrice'].get('value', 0) / 100
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É
        if product_data['default_code']:
            existing = self.odoo_models.execute_kw(
                DB_NAME, self.odoo_uid, ODOO_PASSWORD,
                'product.product', 'search',
                [[('default_code', '=', product_data['default_code'])]]
            )
            
            if existing:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π
                self.odoo_models.execute_kw(
                    DB_NAME, self.odoo_uid, ODOO_PASSWORD,
                    'product.product', 'write',
                    [existing[0], product_data]
                )
                return existing[0]
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä
        try:
            product_id = self.odoo_models.execute_kw(
                DB_NAME, self.odoo_uid, ODOO_PASSWORD,
                'product.product', 'create',
                [product_data]
            )
            return product_id
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ {product_data['name']}: {str(e)[:50]}")
            return None
    
    def sync_products(self):
        """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏"""
        print("\n" + "="*60)
        print("üîÑ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –¢–û–í–ê–†–û–í")
        print("="*60)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –∏–∑ –ú–æ–π–°–∫–ª–∞–¥
        moysklad_products = self.get_moysklad_products()
        moysklad_variants = self.get_moysklad_variants()
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã
        created_count = 0
        updated_count = 0
        
        print("\nüìù –ü–µ—Ä–µ–Ω–æ—Å —Ç–æ–≤–∞—Ä–æ–≤ –≤ Odoo...")
        
        # –ü–µ—Ä–µ–Ω–æ—Å–∏–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
        for product in moysklad_products:
            result = self.create_odoo_product(product)
            if result:
                created_count += 1
                print(f"  ‚úÖ {product.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
            
            # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∞ (—É–±–µ—Ä–∏—Ç–µ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞)
            if created_count >= 10:
                print("\n‚ö†Ô∏è –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ 10 —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∞")
                print("–£–±–µ—Ä–∏—Ç–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤ –∫–æ–¥–µ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞")
                break
        
        # –ü–µ—Ä–µ–Ω–æ—Å–∏–º –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏
        for variant in moysklad_variants[:10]:  # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∞
            result = self.create_odoo_product(variant)
            if result:
                created_count += 1
                print(f"  ‚úÖ {variant.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}")
        
        print("\n" + "="*60)
        print(f"‚úÖ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê")
        print(f"  –°–æ–∑–¥–∞–Ω–æ/–æ–±–Ω–æ–≤–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {created_count}")
        print("="*60)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å—Ç–∞—Ç–∫–∏
        stocks = self.get_moysklad_stock()
        if stocks:
            print("\nüìä –û—Å—Ç–∞—Ç–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ (–ø–µ—Ä–≤—ã–µ 5):")
            for stock in stocks[:5]:
                print(f"  ‚Ä¢ {stock.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}: {stock.get('stock', 0)} —à—Ç")

def main():
    print("="*60)
    print("üîÑ –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –ú–û–ô–°–ö–õ–ê–î ‚Üí ODOO")
    print("="*60)
    
    print("\n‚ö†Ô∏è –í–ê–ñ–ù–û: –£–∫–∞–∂–∏—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –ú–æ–π–°–∫–ª–∞–¥ –≤ —Å–∫—Ä–∏–ø—Ç–µ:")
    print("  - MOYSKLAD_LOGIN = '–≤–∞—à_–ª–æ–≥–∏–Ω'")
    print("  - MOYSKLAD_PASSWORD = '–≤–∞—à_–ø–∞—Ä–æ–ª—å'")
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –ú–æ–π–°–∫–ª–∞–¥:")
    login = input("–õ–æ–≥–∏–Ω (email): ").strip()
    password = input("–ü–∞—Ä–æ–ª—å: ").strip()
    
    if not login or not password:
        print("‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å")
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    global MOYSKLAD_LOGIN, MOYSKLAD_PASSWORD
    MOYSKLAD_LOGIN = login
    MOYSKLAD_PASSWORD = password
    
    try:
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º
        syncer = MoySkladToOdoo()
        
        if syncer.test_moysklad_connection():
            syncer.sync_products()
        else:
            print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ú–æ–π–°–∫–ª–∞–¥")
            print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å")
            
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()
