#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–¥—É–ª–µ–π Odoo
–ê–≤—Ç–æ—Ä: Claude AI Assistant
–î–∞—Ç–∞: 09.08.2025
"""

import xmlrpc.client
import ssl
import sys

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
ODOO_URL = "https://odoosportspitproject-production.up.railway.app"
DB_NAME = "odoo_sportpit"
USERNAME = "danila@usafitandjoy.com"
PASSWORD = "admin_sportpit_2024"

# –°–ø–∏—Å–æ–∫ –º–æ–¥—É–ª–µ–π –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
MODULES_TO_INSTALL = [
    # –û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏
    'mrp',                    # Manufacturing
    'stock',                  # Inventory
    'purchase',               # Purchase
    'sale_management',        # Sales with quotations
    'quality_control',        # Quality Control
    'account',               # Accounting
    'hr',                    # Employees
    'hr_attendance',         # Attendances
    'project',               # Project Management
    'product_expiry',        # Product Expiry Dates
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª–µ–∑–Ω—ã–µ –º–æ–¥—É–ª–∏
    'mrp_workorder',         # Work Orders
    'stock_barcode',         # Barcode scanning
    'purchase_stock',        # Purchase-Stock integration
    'sale_stock',           # Sale-Stock integration
    'mrp_account',          # MRP-Accounting integration
    'quality_mrp',          # Quality in Manufacturing
    'stock_account',        # Stock valuation
    'mrp_subcontracting',   # Subcontracting
    'web_responsive',       # Responsive Web Interface (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
]

def connect_to_odoo():
    """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Odoo —á–µ—Ä–µ–∑ XML-RPC"""
    print("üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Odoo...")
    
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º SSL warnings –¥–ª—è self-signed —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
    ssl_context = ssl.create_default_context()
    ssl_context.check_hostname = False
    ssl_context.verify_mode = ssl.CERT_NONE
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ common endpoint –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        common = xmlrpc.client.ServerProxy(
            f'{ODOO_URL}/xmlrpc/2/common',
            context=ssl_context
        )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é
        version = common.version()
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ Odoo {version['server_version']}")
        
        # –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
        uid = common.authenticate(DB_NAME, USERNAME, PASSWORD, {})
        
        if uid:
            print(f"‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞ (UID: {uid})")
            
            # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ object endpoint
            models = xmlrpc.client.ServerProxy(
                f'{ODOO_URL}/xmlrpc/2/object',
                context=ssl_context
            )
            
            return uid, models
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏")
            return None, None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return None, None

def get_installed_modules(uid, models):
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π"""
    try:
        installed = models.execute_kw(
            DB_NAME, uid, PASSWORD,
            'ir.module.module', 'search_read',
            [[('state', '=', 'installed')]],
            {'fields': ['name', 'display_name']}
        )
        return {m['name']: m['display_name'] for m in installed}
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –º–æ–¥—É–ª–µ–π: {e}")
        return {}

def install_module(uid, models, module_name):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–¥–Ω–æ–≥–æ –º–æ–¥—É–ª—è"""
    try:
        # –ò—â–µ–º –º–æ–¥—É–ª—å
        module_ids = models.execute_kw(
            DB_NAME, uid, PASSWORD,
            'ir.module.module', 'search',
            [[('name', '=', module_name)]]
        )
        
        if not module_ids:
            print(f"  ‚ö†Ô∏è –ú–æ–¥—É–ª—å '{module_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–¥—É–ª—è
        module = models.execute_kw(
            DB_NAME, uid, PASSWORD,
            'ir.module.module', 'read',
            [module_ids[0]],
            {'fields': ['state', 'display_name']}
        )
        
        if module[0]['state'] == 'installed':
            print(f"  ‚úÖ '{module[0]['display_name']}' —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            return True
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–¥—É–ª—å
        print(f"  üîÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ '{module[0]['display_name']}'...")
        models.execute_kw(
            DB_NAME, uid, PASSWORD,
            'ir.module.module', 'button_immediate_install',
            [module_ids]
        )
        
        print(f"  ‚úÖ '{module[0]['display_name']}' —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return True
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ '{module_name}': {e}")
        return False

def configure_company(uid, models):
    """–ë–∞–∑–æ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–ø–∞–Ω–∏–∏"""
    print("\nüè¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–ø–∞–Ω–∏–∏...")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–ø–∞–Ω–∏—é
        company_ids = models.execute_kw(
            DB_NAME, uid, PASSWORD,
            'res.company', 'search',
            [[]]
        )
        
        if company_ids:
            # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏
            models.execute_kw(
                DB_NAME, uid, PASSWORD,
                'res.company', 'write',
                [company_ids[0], {
                    'name': 'SportPit Company',
                    'street': '—É–ª. –°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è, 1',
                    'city': '–ú–æ—Å–∫–≤–∞',
                    'zip': '123456',
                    'country_id': 188,  # Russia
                    'phone': '+7 (495) 123-45-67',
                    'email': 'info@sportpit.ru',
                    'website': 'https://sportpit.ru',
                    'vat': '7707123456',  # –ò–ù–ù
                }]
            )
            print("  ‚úÖ –î–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
            
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∞–ª—é—Ç—ã (RUB)
        rub_ids = models.execute_kw(
            DB_NAME, uid, PASSWORD,
            'res.currency', 'search',
            [[('name', '=', 'RUB')]]
        )
        
        if rub_ids:
            models.execute_kw(
                DB_NAME, uid, PASSWORD,
                'res.currency', 'write',
                [rub_ids[0], {'active': True}]
            )
            print("  ‚úÖ –í–∞–ª—é—Ç–∞ RUB –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞")
            
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏: {e}")

def create_warehouses(uid, models):
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–∫–ª–∞–¥–æ–≤"""
    print("\nüì¶ –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫–ª–∞–¥–æ–≤...")
    
    warehouses = [
        {
            'name': '–°–∫–ª–∞–¥ —Å—ã—Ä—å—è',
            'code': 'RAW',
            'reception_steps': 'two_steps',  # –ü—Ä–∏–µ–º–∫–∞ + –ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞
            'delivery_steps': 'pick_ship',   # –ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è + –û—Ç–≥—Ä—É–∑–∫–∞
        },
        {
            'name': '–°–∫–ª–∞–¥ –≥–æ—Ç–æ–≤–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏',
            'code': 'FIN',
            'reception_steps': 'one_step',
            'delivery_steps': 'pick_pack_ship',  # –ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è + –£–ø–∞–∫–æ–≤–∫–∞ + –û—Ç–≥—Ä—É–∑–∫–∞
        }
    ]
    
    try:
        for wh_data in warehouses:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–∫–ª–∞–¥
            existing = models.execute_kw(
                DB_NAME, uid, PASSWORD,
                'stock.warehouse', 'search',
                [[('code', '=', wh_data['code'])]]
            )
            
            if not existing:
                wh_id = models.execute_kw(
                    DB_NAME, uid, PASSWORD,
                    'stock.warehouse', 'create',
                    [wh_data]
                )
                print(f"  ‚úÖ –°–∫–ª–∞–¥ '{wh_data['name']}' —Å–æ–∑–¥–∞–Ω")
            else:
                print(f"  ‚ÑπÔ∏è –°–∫–ª–∞–¥ '{wh_data['name']}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫–ª–∞–¥–æ–≤: {e}")

def create_product_categories(uid, models):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—Ä–æ–¥—É–∫—Ç–æ–≤"""
    print("\nüìÅ –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—Ä–æ–¥—É–∫—Ç–æ–≤...")
    
    categories = [
        {'name': '–°—ã—Ä—å–µ', 'parent': None},
        {'name': '–ë–µ–ª–∫–∏', 'parent': '–°—ã—Ä—å–µ'},
        {'name': '–£–≥–ª–µ–≤–æ–¥—ã', 'parent': '–°—ã—Ä—å–µ'},
        {'name': '–î–æ–±–∞–≤–∫–∏', 'parent': '–°—ã—Ä—å–µ'},
        {'name': '–ê—Ä–æ–º–∞—Ç–∏–∑–∞—Ç–æ—Ä—ã', 'parent': '–°—ã—Ä—å–µ'},
        {'name': '–ì–æ—Ç–æ–≤–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è', 'parent': None},
        {'name': '–ü—Ä–æ—Ç–µ–∏–Ω—ã', 'parent': '–ì–æ—Ç–æ–≤–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è'},
        {'name': '–ì–µ–π–Ω–µ—Ä—ã', 'parent': '–ì–æ—Ç–æ–≤–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è'},
        {'name': 'BCAA', 'parent': '–ì–æ—Ç–æ–≤–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è'},
        {'name': '–ö—Ä–µ–∞—Ç–∏–Ω', 'parent': '–ì–æ—Ç–æ–≤–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è'},
        {'name': '–ü—Ä–µ–¥—Ç—Ä–µ–Ω–∏–∫–∏', 'parent': '–ì–æ—Ç–æ–≤–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è'},
    ]
    
    try:
        created_categories = {}
        
        for cat_data in categories:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º parent_id
            parent_id = False
            if cat_data['parent']:
                if cat_data['parent'] in created_categories:
                    parent_id = created_categories[cat_data['parent']]
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            existing = models.execute_kw(
                DB_NAME, uid, PASSWORD,
                'product.category', 'search',
                [[('name', '=', cat_data['name']), 
                  ('parent_id', '=', parent_id)]]
            )
            
            if not existing:
                cat_id = models.execute_kw(
                    DB_NAME, uid, PASSWORD,
                    'product.category', 'create',
                    [{
                        'name': cat_data['name'],
                        'parent_id': parent_id
                    }]
                )
                created_categories[cat_data['name']] = cat_id
                print(f"  ‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è '{cat_data['name']}' —Å–æ–∑–¥–∞–Ω–∞")
            else:
                created_categories[cat_data['name']] = existing[0]
                print(f"  ‚ÑπÔ∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è '{cat_data['name']}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=" * 60)
    print("üöÄ –£–°–¢–ê–ù–û–í–ö–ê –ò –ù–ê–°–¢–†–û–ô–ö–ê –ú–û–î–£–õ–ï–ô ODOO")
    print("=" * 60)
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Odoo
    uid, models = connect_to_odoo()
    
    if not uid:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Odoo")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:")
        print("1. –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞")
        print("2. –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")
        print("3. Odoo –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É URL")
        sys.exit(1)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
    print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π...")
    installed = get_installed_modules(uid, models)
    print(f"  –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –º–æ–¥—É–ª–µ–π: {len(installed)}")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
    print("\nüì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–¥—É–ª–µ–π...")
    success_count = 0
    for module_name in MODULES_TO_INSTALL:
        if install_module(uid, models, module_name):
            success_count += 1
    
    print(f"\n‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ {success_count} –∏–∑ {len(MODULES_TO_INSTALL)} –º–æ–¥—É–ª–µ–π")
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–º–ø–∞–Ω–∏—é
    configure_company(uid, models)
    
    # –°–æ–∑–¥–∞–µ–º —Å–∫–ª–∞–¥—ã
    create_warehouses(uid, models)
    
    # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
    create_product_categories(uid, models)
    
    print("\n" + "=" * 60)
    print("‚úÖ –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!")
    print("=" * 60)
    print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –í–æ–π–¥–∏—Ç–µ –≤ Odoo –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏")
    print("2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–∞–±–æ—á–∏–µ —Ü–µ–Ω—Ç—Ä—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞")
    print("3. –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –∏ —Ä–µ—Ü–µ–ø—Ç—É—Ä—ã")
    print("4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞")

if __name__ == "__main__":
    main()
